{"version":3,"sources":["images/icon-cross.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","todos","setTodos","setCompleted","filter","setFilter","ToDo","info","this","action","todo","id","status","Math","random","prev","i","className","onClick","complete","style","deletion","src","cross","submit","e","preventDefault","Date","now","document","getElementById","value","useEffect","querySelector","reset","counter","length","rendered","map","markup","filtering","filters","classList","add","remove","setStyle","body","toggle","querySelectorAll","forEach","onSubmit","type","minlength","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.139b6b56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import './App.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport cross from './images/icon-cross.svg';\n\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const [completed, setCompleted] = useState()\n  const [filter, setFilter] = useState('all')\n\n  class ToDo {\n    constructor(info){\n      this.action = info.todo\n      this.id = info.id\n      this.status = false\n    }\n    complete(){\n      this.status = !this.status\n      setCompleted(Math.random())\n    }\n    deletion(){\n      setTodos(prev => prev.filter(i => i.id!==this.id))\n    }\n    get markup(){\n      return (\n        <div className='todo' key={this.id}>\n          <img onClick={() => this.complete()} className={`check ${this.status ? 'checkDone' : ''}`}></img>\n          <div className={`action ${this.status && style ? 'actionDone' : '' }`}>{this.action}</div>\n          <img onClick={() => this.deletion()} className='delete' src={cross}></img>\n        </div>\n      )\n    }\n  }\n\n  const submit = (e) => {\n    e.preventDefault()\n    setTodos(prev => [\n      new ToDo ({\n        id: Date.now(),\n        todo: document.getElementById(\"todo\").value\n      }), ...prev\n    ])\n  }\n  useEffect(() => document.querySelector(\"form\").reset(), [submit])\n\n  const counter = todos.filter(i => i.status === false).length\n  const rendered =  filter === 'active' ? todos.filter(i => i.status === false).map(i => i.markup) :\n    filter === 'completed' ? todos.filter(i => i.status === true).map(i => i.markup) :\n    todos.map(i => i.markup)\n  \n  function filtering(filter){\n    setFilter(filter)\n\n    const filters = ['all', 'active', 'completed']\n    document.querySelector(`.${filter}`).classList.add('activeFilter')\n    document.querySelector(`.${filters.filter(i => i!==filter)[0]}`).classList.remove('activeFilter')\n    document.querySelector(`.${filters.filter(i => i!==filter)[1]}`).classList.remove('activeFilter')\n  }\n  const clear = () => setTodos(prev => prev.filter(i => i.status !== true))\n  const [style, setStyle] = useState(true)\n  function toggleStyles(){\n    document.body.classList.toggle('bodyLight')\n    document.querySelector('.styleToggler').classList.toggle('moon')\n    document.querySelector('.form').classList.toggle('todoLight')\n    document.querySelector('.field').classList.toggle('todoLight')\n    document.querySelector('.listOfTodos').classList.toggle('todoLight')\n    document.querySelector('.all').classList.toggle('footerLight')\n    document.querySelector('.active').classList.toggle('footerLight')\n    document.querySelector('.completed').classList.toggle('footerLight')\n    document.querySelector('.clear').classList.toggle('footerLight')\n    if (!style) {\n      document.querySelectorAll('.action').forEach(i=> i.classList.remove('actionLight'))\n      document.querySelectorAll('.actionDone').forEach(i=> i.classList.remove('doneLight'))\n    } if (style) {\n      document.querySelectorAll('.action').forEach(i=> i.classList.add('actionLight'))\n      document.querySelectorAll('.actionDone').forEach(i=> i.classList.add('doneLight'))  \n    } \n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>todo</h1>\n        <img onClick={() => setStyle(prev => !prev, toggleStyles())} className='styleToggler'></img>\n      </header>\n      <form className=\"form\" onSubmit={submit}>\n      <img className='check'></img>\n        <input className=\"field\" type=\"text\" minlength=\"5\" id=\"todo\" placeholder=\"Create your to do action\"></input>\n      </form>\n      <div className='listOfTodos'>\n        {rendered}\n        <div className='footer'>\n          <div className='counter'>{counter} items left</div>\n          <div className='filters'>\n            <div className='all' onClick={() => filtering('all')}>All</div>\n            <div className='active' onClick={() => filtering('active')}>Active</div>\n            <div className='completed' onClick={() => filtering('completed')}>Completed</div>\n          </div>\n          <div className='clear' onClick={() => clear()}>\n            Clear Completed\n          </div>\n        </div>\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}